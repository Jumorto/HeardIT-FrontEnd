{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Misho\\\\Desktop\\\\Semester 6\\\\HeardIT\\\\Music app test 2 - front end\\\\musictest2\\\\src\\\\musicPlayer.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useRef, useEffect, useCallback } from \"react\"\n// import ReactPlayer from \"react-player\"\n// import { FaPlay, FaPause } from \"react-icons/fa\"\n\n// const MusicPlayer = () => {\n// \tconst [playing, setPlaying] = useState(false)\n// \tconst [played, setPlayed] = useState(0)\n// \tconst [volume, setVolume] = useState(0.5)\n// \tconst [duration, setDuration] = useState(0)\n// \tconst [currentTime, setCurrentTime] = useState(0)\n// \tconst [seeking, setSeeking] = useState(false)\n\n// \tconst playerRef = useRef(null)\n\n// \tconsole.log(\"-----------vvv--------------\")\n// \tconsole.log(\"playing: \" + playing)\n\n// \tconst handlePlayPause = useCallback(() => {\n// \t\tsetPlaying((prevPlaying) => !prevPlaying)\n// \t}, [playing])\n\n// \tconst handleProgress = useCallback(\n// \t\t(progress) => {\n// \t\t\tif (!seeking) {\n// \t\t\t\tsetPlayed(progress.played)\n// \t\t\t\tsetCurrentTime(progress.played * duration)\n// \t\t\t}\n// \t\t},\n// \t\t[seeking, duration]\n// \t)\n\n// \tconst handleSeek = useCallback(\n// \t\t(e) => {\n// \t\t\tconst seekTime = parseFloat(e.target.value)\n// \t\t\tsetPlayed(seekTime)\n// \t\t\tsetCurrentTime(seekTime * duration)\n// \t\t\tplayerRef.current.seekTo(seekTime, \"fraction\")\n// \t\t},\n// \t\t[duration]\n// \t)\n\n// \tconst handleSeekMouseDown = useCallback(() => {\n// \t\tsetSeeking(true)\n// \t}, [])\n\n// \tconst handleSeekMouseUp = useCallback(() => {\n// \t\tsetSeeking(false)\n// \t}, [])\n\n// \tconst handleVolumeChange = useCallback((e) => {\n// \t\tconst newVolume = parseFloat(e.target.value)\n// \t\tsetVolume(newVolume)\n// \t}, [])\n\n// \tconst handleDuration = useCallback((duration) => {\n// \t\tsetDuration(duration)\n// \t}, [])\n\n// \tconst handleEnded = useCallback(() => {\n// \t\tsetPlaying(false)\n// \t}, [])\n\n// \tuseEffect(() => {\n// \t\tconsole.log(\"MusicPlayer component re-rendered\")\n// \t}, [])\n\n// \tconst apiUrl = \"http://localhost:8080/api/music/stream\"\n\n// \treturn (\n// \t\t<div>\n// \t\t\t<h2>Music Player</h2>\n// \t\t\t<ReactPlayer\n// \t\t\t\tref={playerRef}\n// \t\t\t\turl={apiUrl}\n// \t\t\t\tplaying={playing}\n// \t\t\t\tvolume={volume}\n// \t\t\t\tonPlay={handlePlayPause}\n// \t\t\t\tonPause={handlePlayPause}\n// \t\t\t\tonProgress={handleProgress}\n// \t\t\t\tonDuration={handleDuration}\n// \t\t\t\tonSeek={handleSeek}\n// \t\t\t\tonEnded={handleEnded}\n// \t\t\t/>\n// \t\t\t<div>\n// \t\t\t\t<button onClick={handlePlayPause}>\n// \t\t\t\t\t{playing ? <FaPause /> : <FaPlay />}\n// \t\t\t\t</button>\n// \t\t\t\t<input\n// \t\t\t\t\ttype=\"range\"\n// \t\t\t\t\tmin={0}\n// \t\t\t\t\tmax={1}\n// \t\t\t\t\tstep=\"any\"\n// \t\t\t\t\tvalue={played}\n// \t\t\t\t\tonChange={handleSeek}\n// \t\t\t\t\tonMouseDown={handleSeekMouseDown}\n// \t\t\t\t\tonMouseUp={handleSeekMouseUp}\n// \t\t\t\t/>\n// \t\t\t</div>\n// \t\t\t<div>\n// \t\t\t\t<input\n// \t\t\t\t\ttype=\"range\"\n// \t\t\t\t\tmin={0}\n// \t\t\t\t\tmax={1}\n// \t\t\t\t\tstep=\"any\"\n// \t\t\t\t\tvalue={volume}\n// \t\t\t\t\tonChange={handleVolumeChange}\n// \t\t\t\t/>\n// \t\t\t</div>\n// \t\t\t<div style={{ marginTop: \"10px\" }}>\n// \t\t\t\t<strong>Status: {playing ? \"Playing\" : \"Paused\"}</strong>\n// \t\t\t\t<p>Duration: {Math.floor(duration)}</p>\n// \t\t\t\t<p>Current Time: {Math.floor(currentTime)}</p>\n// \t\t\t</div>\n// \t\t</div>\n// \t)\n// }\n\n// const MemoizedMusicPlayer = React.memo(MusicPlayer)\n\n// export default MemoizedMusicPlayer\nimport { useEffect, useState } from \"react\";\nimport useSound from \"use-sound\";\nimport { AiFillPlayCircle, AiFillPauseCircle } from \"react-icons/ai\";\nimport { BiSkipNext, BiSkipPrevious } from \"react-icons/bi\";\nimport { IconContext } from \"react-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicPlayer = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [seconds, setSeconds] = useState(); // current position of the audio in seconds\n  const apiUrl = \"http://localhost:8080/api/music/stream\"; // Your backend API endpoint\n  const [play, {\n    pause,\n    duration,\n    sound\n  }] = useSound(apiUrl, {\n    format: \"mp3\" // Specify the audio format if needed\n  });\n  const playingButton = () => {\n    if (isPlaying) {\n      pause();\n      setIsPlaying(false);\n    } else {\n      play();\n      setIsPlaying(true);\n    }\n  };\n  const [currTime, setCurrTime] = useState({\n    min: \"\",\n    sec: \"\"\n  }); // current position of the audio in minutes and seconds\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"component\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Playing Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"musicCover\",\n      src: \"https://picsum.photos/200/200\",\n      alt: \"Album cover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title\",\n        children: \"Music\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subTitle\",\n        children: \"Song\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"playButton\",\n        children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n          value: {\n            size: \"3em\",\n            color: \"#27AE60\"\n          },\n          children: /*#__PURE__*/_jsxDEV(BiSkipPrevious, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 5\n      }, this), !isPlaying ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"playButton\",\n        onClick: playingButton,\n        children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n          value: {\n            size: \"3em\",\n            color: \"#27AE60\"\n          },\n          children: /*#__PURE__*/_jsxDEV(AiFillPlayCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"playButton\",\n        onClick: playingButton,\n        children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n          value: {\n            size: \"3em\",\n            color: \"#27AE60\"\n          },\n          children: /*#__PURE__*/_jsxDEV(AiFillPauseCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"playButton\",\n        children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n          value: {\n            size: \"3em\",\n            color: \"#27AE60\"\n          },\n          children: /*#__PURE__*/_jsxDEV(BiSkipNext, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 3\n  }, this);\n};\n_s(MusicPlayer, \"F8biX8ZzdNJkxAjK75YZzToAdi0=\", false, function () {\n  return [useSound];\n});\n_c = MusicPlayer;\nexport default MusicPlayer;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"names":["useEffect","useState","useSound","AiFillPlayCircle","AiFillPauseCircle","BiSkipNext","BiSkipPrevious","IconContext","jsxDEV","_jsxDEV","MusicPlayer","_s","isPlaying","setIsPlaying","seconds","setSeconds","apiUrl","play","pause","duration","sound","format","playingButton","currTime","setCurrTime","min","sec","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","Provider","value","size","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Misho/Desktop/Semester 6/HeardIT/Music app test 2 - front end/musictest2/src/musicPlayer.jsx"],"sourcesContent":["// import React, { useState, useRef, useEffect, useCallback } from \"react\"\r\n// import ReactPlayer from \"react-player\"\r\n// import { FaPlay, FaPause } from \"react-icons/fa\"\r\n\r\n// const MusicPlayer = () => {\r\n// \tconst [playing, setPlaying] = useState(false)\r\n// \tconst [played, setPlayed] = useState(0)\r\n// \tconst [volume, setVolume] = useState(0.5)\r\n// \tconst [duration, setDuration] = useState(0)\r\n// \tconst [currentTime, setCurrentTime] = useState(0)\r\n// \tconst [seeking, setSeeking] = useState(false)\r\n\r\n// \tconst playerRef = useRef(null)\r\n\r\n// \tconsole.log(\"-----------vvv--------------\")\r\n// \tconsole.log(\"playing: \" + playing)\r\n\r\n// \tconst handlePlayPause = useCallback(() => {\r\n// \t\tsetPlaying((prevPlaying) => !prevPlaying)\r\n// \t}, [playing])\r\n\r\n// \tconst handleProgress = useCallback(\r\n// \t\t(progress) => {\r\n// \t\t\tif (!seeking) {\r\n// \t\t\t\tsetPlayed(progress.played)\r\n// \t\t\t\tsetCurrentTime(progress.played * duration)\r\n// \t\t\t}\r\n// \t\t},\r\n// \t\t[seeking, duration]\r\n// \t)\r\n\r\n// \tconst handleSeek = useCallback(\r\n// \t\t(e) => {\r\n// \t\t\tconst seekTime = parseFloat(e.target.value)\r\n// \t\t\tsetPlayed(seekTime)\r\n// \t\t\tsetCurrentTime(seekTime * duration)\r\n// \t\t\tplayerRef.current.seekTo(seekTime, \"fraction\")\r\n// \t\t},\r\n// \t\t[duration]\r\n// \t)\r\n\r\n// \tconst handleSeekMouseDown = useCallback(() => {\r\n// \t\tsetSeeking(true)\r\n// \t}, [])\r\n\r\n// \tconst handleSeekMouseUp = useCallback(() => {\r\n// \t\tsetSeeking(false)\r\n// \t}, [])\r\n\r\n// \tconst handleVolumeChange = useCallback((e) => {\r\n// \t\tconst newVolume = parseFloat(e.target.value)\r\n// \t\tsetVolume(newVolume)\r\n// \t}, [])\r\n\r\n// \tconst handleDuration = useCallback((duration) => {\r\n// \t\tsetDuration(duration)\r\n// \t}, [])\r\n\r\n// \tconst handleEnded = useCallback(() => {\r\n// \t\tsetPlaying(false)\r\n// \t}, [])\r\n\r\n// \tuseEffect(() => {\r\n// \t\tconsole.log(\"MusicPlayer component re-rendered\")\r\n// \t}, [])\r\n\r\n// \tconst apiUrl = \"http://localhost:8080/api/music/stream\"\r\n\r\n// \treturn (\r\n// \t\t<div>\r\n// \t\t\t<h2>Music Player</h2>\r\n// \t\t\t<ReactPlayer\r\n// \t\t\t\tref={playerRef}\r\n// \t\t\t\turl={apiUrl}\r\n// \t\t\t\tplaying={playing}\r\n// \t\t\t\tvolume={volume}\r\n// \t\t\t\tonPlay={handlePlayPause}\r\n// \t\t\t\tonPause={handlePlayPause}\r\n// \t\t\t\tonProgress={handleProgress}\r\n// \t\t\t\tonDuration={handleDuration}\r\n// \t\t\t\tonSeek={handleSeek}\r\n// \t\t\t\tonEnded={handleEnded}\r\n// \t\t\t/>\r\n// \t\t\t<div>\r\n// \t\t\t\t<button onClick={handlePlayPause}>\r\n// \t\t\t\t\t{playing ? <FaPause /> : <FaPlay />}\r\n// \t\t\t\t</button>\r\n// \t\t\t\t<input\r\n// \t\t\t\t\ttype=\"range\"\r\n// \t\t\t\t\tmin={0}\r\n// \t\t\t\t\tmax={1}\r\n// \t\t\t\t\tstep=\"any\"\r\n// \t\t\t\t\tvalue={played}\r\n// \t\t\t\t\tonChange={handleSeek}\r\n// \t\t\t\t\tonMouseDown={handleSeekMouseDown}\r\n// \t\t\t\t\tonMouseUp={handleSeekMouseUp}\r\n// \t\t\t\t/>\r\n// \t\t\t</div>\r\n// \t\t\t<div>\r\n// \t\t\t\t<input\r\n// \t\t\t\t\ttype=\"range\"\r\n// \t\t\t\t\tmin={0}\r\n// \t\t\t\t\tmax={1}\r\n// \t\t\t\t\tstep=\"any\"\r\n// \t\t\t\t\tvalue={volume}\r\n// \t\t\t\t\tonChange={handleVolumeChange}\r\n// \t\t\t\t/>\r\n// \t\t\t</div>\r\n// \t\t\t<div style={{ marginTop: \"10px\" }}>\r\n// \t\t\t\t<strong>Status: {playing ? \"Playing\" : \"Paused\"}</strong>\r\n// \t\t\t\t<p>Duration: {Math.floor(duration)}</p>\r\n// \t\t\t\t<p>Current Time: {Math.floor(currentTime)}</p>\r\n// \t\t\t</div>\r\n// \t\t</div>\r\n// \t)\r\n// }\r\n\r\n// const MemoizedMusicPlayer = React.memo(MusicPlayer)\r\n\r\n// export default MemoizedMusicPlayer\r\nimport { useEffect, useState } from \"react\"\r\nimport useSound from \"use-sound\"\r\nimport { AiFillPlayCircle, AiFillPauseCircle } from \"react-icons/ai\"\r\nimport { BiSkipNext, BiSkipPrevious } from \"react-icons/bi\"\r\nimport { IconContext } from \"react-icons\"\r\n\r\nconst MusicPlayer = () => {\r\n\tconst [isPlaying, setIsPlaying] = useState(false)\r\n\tconst [seconds, setSeconds] = useState() // current position of the audio in seconds\r\n\tconst apiUrl = \"http://localhost:8080/api/music/stream\" // Your backend API endpoint\r\n\tconst [play, { pause, duration, sound }] = useSound(apiUrl, {\r\n\t\tformat: \"mp3\", // Specify the audio format if needed\r\n\t})\r\n\r\n\tconst playingButton = () => {\r\n\t\tif (isPlaying) {\r\n\t\t\tpause()\r\n\t\t\tsetIsPlaying(false)\r\n\t\t} else {\r\n\t\t\tplay()\r\n\t\t\tsetIsPlaying(true)\r\n\t\t}\r\n\t}\r\n\r\n\tconst [currTime, setCurrTime] = useState({\r\n\t\tmin: \"\",\r\n\t\tsec: \"\",\r\n\t}) // current position of the audio in minutes and seconds\r\n\r\n\treturn (\r\n\t\t<div className=\"component\">\r\n\t\t\t<h2>Playing Now</h2>\r\n\t\t\t<img\r\n\t\t\t\tclassName=\"musicCover\"\r\n\t\t\t\tsrc=\"https://picsum.photos/200/200\"\r\n\t\t\t\talt=\"Album cover\"\r\n\t\t\t/>\r\n\t\t\t<div>\r\n\t\t\t\t<h3 className=\"title\">Music</h3>\r\n\t\t\t\t<p className=\"subTitle\">Song</p>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button className=\"playButton\">\r\n\t\t\t\t\t<IconContext.Provider\r\n\t\t\t\t\t\tvalue={{ size: \"3em\", color: \"#27AE60\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<BiSkipPrevious />\r\n\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t</button>\r\n\t\t\t\t{!isPlaying ? (\r\n\t\t\t\t\t<button className=\"playButton\" onClick={playingButton}>\r\n\t\t\t\t\t\t<IconContext.Provider\r\n\t\t\t\t\t\t\tvalue={{ size: \"3em\", color: \"#27AE60\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<AiFillPlayCircle />\r\n\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<button className=\"playButton\" onClick={playingButton}>\r\n\t\t\t\t\t\t<IconContext.Provider\r\n\t\t\t\t\t\t\tvalue={{ size: \"3em\", color: \"#27AE60\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<AiFillPauseCircle />\r\n\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t\t<button className=\"playButton\">\r\n\t\t\t\t\t<IconContext.Provider\r\n\t\t\t\t\t\tvalue={{ size: \"3em\", color: \"#27AE60\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<BiSkipNext />\r\n\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MusicPlayer\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}