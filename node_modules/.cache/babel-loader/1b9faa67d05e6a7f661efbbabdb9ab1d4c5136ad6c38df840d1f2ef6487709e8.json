{"ast":null,"code":"// export default MemoizedMusicPlayer\nimport{useEffect,useState}from\"react\";import useSound from\"use-sound\";import{AiFillPlayCircle,AiFillPauseCircle}from\"react-icons/ai\";import{BiSkipNext,BiSkipPrevious}from\"react-icons/bi\";import{IconContext}from\"react-icons\";import ProgressBar from\"./progressBar.jsx\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const MusicPlayer=()=>{const[isPlaying,setIsPlaying]=useState(false);const[seconds,setSeconds]=useState();// current position of the audio in seconds\n// const apiUrl = \"http://localhost:8080/api/music/stream\" // Your backend API endpoint\nconst apiUrl=\"https://heardit-backend-4lxjpjjbza-ez.a.run.app/api/music/stream\";// Your backend API endpoint\nconst[play,{pause,duration,position,sound}]=useSound(apiUrl,{format:\"mp3\"// Specify the audio format if needed\n});const[progress,setProgress]=useState(0);useEffect(()=>{const interval=setInterval(()=>{// Update the progress bar position every 100 milliseconds\nif(isPlaying&&duration){// Calculate the percentage of completion for the progress bar\nconst calculatedProgress=position/duration*100;setProgress(calculatedProgress);}},100);// Clear the interval on component unmount\nreturn()=>clearInterval(interval);},[isPlaying,position,duration]);const playingButton=()=>{if(isPlaying){pause();setIsPlaying(false);}else{play();setIsPlaying(true);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"component\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Playing Now\"}),/*#__PURE__*/_jsx(\"img\",{className:\"musicCover\",src:\"https://picsum.photos/200/200\",alt:\"Album cover\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"title\",children:\"Music\"}),/*#__PURE__*/_jsx(\"p\",{className:\"subTitle\",children:\"Song\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"playButton\",children:/*#__PURE__*/_jsx(IconContext.Provider,{value:{size:\"3em\",color:\"#27AE60\"},children:/*#__PURE__*/_jsx(BiSkipPrevious,{})})}),!isPlaying?/*#__PURE__*/_jsx(\"button\",{className:\"playButton\",onClick:playingButton,children:/*#__PURE__*/_jsx(IconContext.Provider,{value:{size:\"3em\",color:\"#27AE60\"},children:/*#__PURE__*/_jsx(AiFillPlayCircle,{})})}):/*#__PURE__*/_jsx(\"button\",{className:\"playButton\",onClick:playingButton,children:/*#__PURE__*/_jsx(IconContext.Provider,{value:{size:\"3em\",color:\"#27AE60\"},children:/*#__PURE__*/_jsx(AiFillPauseCircle,{})})}),/*#__PURE__*/_jsx(\"button\",{className:\"playButton\",children:/*#__PURE__*/_jsx(IconContext.Provider,{value:{size:\"3em\",color:\"#27AE60\"},children:/*#__PURE__*/_jsx(BiSkipNext,{})})})]}),/*#__PURE__*/_jsx(ProgressBar,{progress:progress})]});};export default MusicPlayer;","map":{"version":3,"names":["useEffect","useState","useSound","AiFillPlayCircle","AiFillPauseCircle","BiSkipNext","BiSkipPrevious","IconContext","ProgressBar","jsx","_jsx","jsxs","_jsxs","MusicPlayer","isPlaying","setIsPlaying","seconds","setSeconds","apiUrl","play","pause","duration","position","sound","format","progress","setProgress","interval","setInterval","calculatedProgress","clearInterval","playingButton","className","children","src","alt","Provider","value","size","color","onClick"],"sources":["C:/Users/Misho/Desktop/Semester 6/HeardIT-FrontEnd/src/musicPlayer.jsx"],"sourcesContent":["// export default MemoizedMusicPlayer\r\nimport { useEffect, useState } from \"react\"\r\nimport useSound from \"use-sound\"\r\nimport { AiFillPlayCircle, AiFillPauseCircle } from \"react-icons/ai\"\r\nimport { BiSkipNext, BiSkipPrevious } from \"react-icons/bi\"\r\nimport { IconContext } from \"react-icons\"\r\nimport ProgressBar from \"./progressBar.jsx\"\r\n\r\nconst MusicPlayer = () => {\r\n\tconst [isPlaying, setIsPlaying] = useState(false)\r\n\tconst [seconds, setSeconds] = useState() // current position of the audio in seconds\r\n\r\n\t// const apiUrl = \"http://localhost:8080/api/music/stream\" // Your backend API endpoint\r\n\tconst apiUrl =\r\n\t\t\"https://heardit-backend-4lxjpjjbza-ez.a.run.app/api/music/stream\" // Your backend API endpoint\r\n\r\n\tconst [play, { pause, duration, position, sound }] = useSound(apiUrl, {\r\n\t\tformat: \"mp3\", // Specify the audio format if needed\r\n\t})\r\n\r\n\tconst [progress, setProgress] = useState(0)\r\n\r\n\tuseEffect(() => {\r\n\t\tconst interval = setInterval(() => {\r\n\t\t\t// Update the progress bar position every 100 milliseconds\r\n\t\t\tif (isPlaying && duration) {\r\n\t\t\t\t// Calculate the percentage of completion for the progress bar\r\n\t\t\t\tconst calculatedProgress = (position / duration) * 100\r\n\t\t\t\tsetProgress(calculatedProgress)\r\n\t\t\t}\r\n\t\t}, 100)\r\n\r\n\t\t// Clear the interval on component unmount\r\n\t\treturn () => clearInterval(interval)\r\n\t}, [isPlaying, position, duration])\r\n\r\n\tconst playingButton = () => {\r\n\t\tif (isPlaying) {\r\n\t\t\tpause()\r\n\t\t\tsetIsPlaying(false)\r\n\t\t} else {\r\n\t\t\tplay()\r\n\t\t\tsetIsPlaying(true)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"component\">\r\n\t\t\t<h2>Playing Now</h2>\r\n\t\t\t<img\r\n\t\t\t\tclassName=\"musicCover\"\r\n\t\t\t\tsrc=\"https://picsum.photos/200/200\"\r\n\t\t\t\talt=\"Album cover\"\r\n\t\t\t/>\r\n\t\t\t<div>\r\n\t\t\t\t<h3 className=\"title\">Music</h3>\r\n\t\t\t\t<p className=\"subTitle\">Song</p>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button className=\"playButton\">\r\n\t\t\t\t\t<IconContext.Provider\r\n\t\t\t\t\t\tvalue={{ size: \"3em\", color: \"#27AE60\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<BiSkipPrevious />\r\n\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t</button>\r\n\t\t\t\t{!isPlaying ? (\r\n\t\t\t\t\t<button className=\"playButton\" onClick={playingButton}>\r\n\t\t\t\t\t\t<IconContext.Provider\r\n\t\t\t\t\t\t\tvalue={{ size: \"3em\", color: \"#27AE60\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<AiFillPlayCircle />\r\n\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<button className=\"playButton\" onClick={playingButton}>\r\n\t\t\t\t\t\t<IconContext.Provider\r\n\t\t\t\t\t\t\tvalue={{ size: \"3em\", color: \"#27AE60\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<AiFillPauseCircle />\r\n\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t\t<button className=\"playButton\">\r\n\t\t\t\t\t<IconContext.Provider\r\n\t\t\t\t\t\tvalue={{ size: \"3em\", color: \"#27AE60\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<BiSkipNext />\r\n\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<ProgressBar progress={progress} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MusicPlayer\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}