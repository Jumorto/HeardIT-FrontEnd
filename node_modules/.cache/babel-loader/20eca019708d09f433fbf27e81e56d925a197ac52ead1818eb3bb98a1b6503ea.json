{"ast":null,"code":"// import React, { useState, useRef, useEffect, useCallback } from \"react\"\n// import ReactPlayer from \"react-player\"\n// import { FaPlay, FaPause } from \"react-icons/fa\"\n\n// const MusicPlayer = () => {\n// \tconst [playing, setPlaying] = useState(false)\n// \tconst [played, setPlayed] = useState(0)\n// \tconst [volume, setVolume] = useState(0.5)\n// \tconst [duration, setDuration] = useState(0)\n// \tconst [currentTime, setCurrentTime] = useState(0)\n// \tconst [seeking, setSeeking] = useState(false)\n\n// \tconst playerRef = useRef(null)\n\n// \tconsole.log(\"-----------vvv--------------\")\n// \tconsole.log(\"playing: \" + playing)\n\n// \tconst handlePlayPause = useCallback(() => {\n// \t\tsetPlaying((prevPlaying) => !prevPlaying)\n// \t}, [playing])\n\n// \tconst handleProgress = useCallback(\n// \t\t(progress) => {\n// \t\t\tif (!seeking) {\n// \t\t\t\tsetPlayed(progress.played)\n// \t\t\t\tsetCurrentTime(progress.played * duration)\n// \t\t\t}\n// \t\t},\n// \t\t[seeking, duration]\n// \t)\n\n// \tconst handleSeek = useCallback(\n// \t\t(e) => {\n// \t\t\tconst seekTime = parseFloat(e.target.value)\n// \t\t\tsetPlayed(seekTime)\n// \t\t\tsetCurrentTime(seekTime * duration)\n// \t\t\tplayerRef.current.seekTo(seekTime, \"fraction\")\n// \t\t},\n// \t\t[duration]\n// \t)\n\n// \tconst handleSeekMouseDown = useCallback(() => {\n// \t\tsetSeeking(true)\n// \t}, [])\n\n// \tconst handleSeekMouseUp = useCallback(() => {\n// \t\tsetSeeking(false)\n// \t}, [])\n\n// \tconst handleVolumeChange = useCallback((e) => {\n// \t\tconst newVolume = parseFloat(e.target.value)\n// \t\tsetVolume(newVolume)\n// \t}, [])\n\n// \tconst handleDuration = useCallback((duration) => {\n// \t\tsetDuration(duration)\n// \t}, [])\n\n// \tconst handleEnded = useCallback(() => {\n// \t\tsetPlaying(false)\n// \t}, [])\n\n// \tuseEffect(() => {\n// \t\tconsole.log(\"MusicPlayer component re-rendered\")\n// \t}, [])\n\n// \tconst apiUrl = \"http://localhost:8080/api/music/stream\"\n\n// \treturn (\n// \t\t<div>\n// \t\t\t<h2>Music Player</h2>\n// \t\t\t<ReactPlayer\n// \t\t\t\tref={playerRef}\n// \t\t\t\turl={apiUrl}\n// \t\t\t\tplaying={playing}\n// \t\t\t\tvolume={volume}\n// \t\t\t\tonPlay={handlePlayPause}\n// \t\t\t\tonPause={handlePlayPause}\n// \t\t\t\tonProgress={handleProgress}\n// \t\t\t\tonDuration={handleDuration}\n// \t\t\t\tonSeek={handleSeek}\n// \t\t\t\tonEnded={handleEnded}\n// \t\t\t/>\n// \t\t\t<div>\n// \t\t\t\t<button onClick={handlePlayPause}>\n// \t\t\t\t\t{playing ? <FaPause /> : <FaPlay />}\n// \t\t\t\t</button>\n// \t\t\t\t<input\n// \t\t\t\t\ttype=\"range\"\n// \t\t\t\t\tmin={0}\n// \t\t\t\t\tmax={1}\n// \t\t\t\t\tstep=\"any\"\n// \t\t\t\t\tvalue={played}\n// \t\t\t\t\tonChange={handleSeek}\n// \t\t\t\t\tonMouseDown={handleSeekMouseDown}\n// \t\t\t\t\tonMouseUp={handleSeekMouseUp}\n// \t\t\t\t/>\n// \t\t\t</div>\n// \t\t\t<div>\n// \t\t\t\t<input\n// \t\t\t\t\ttype=\"range\"\n// \t\t\t\t\tmin={0}\n// \t\t\t\t\tmax={1}\n// \t\t\t\t\tstep=\"any\"\n// \t\t\t\t\tvalue={volume}\n// \t\t\t\t\tonChange={handleVolumeChange}\n// \t\t\t\t/>\n// \t\t\t</div>\n// \t\t\t<div style={{ marginTop: \"10px\" }}>\n// \t\t\t\t<strong>Status: {playing ? \"Playing\" : \"Paused\"}</strong>\n// \t\t\t\t<p>Duration: {Math.floor(duration)}</p>\n// \t\t\t\t<p>Current Time: {Math.floor(currentTime)}</p>\n// \t\t\t</div>\n// \t\t</div>\n// \t)\n// }\n\n// const MemoizedMusicPlayer = React.memo(MusicPlayer)\n\n// export default MemoizedMusicPlayer\nimport { useEffect, useState } from \"react\";\nimport useSound from \"use-sound\"; // for handling the sound\nimport qala from \"../assets/qala.mp3\"; // importing the music\nimport { AiFillPlayCircle, AiFillPauseCircle } from \"react-icons/ai\"; // icons for play and pause\nimport { BiSkipNext, BiSkipPrevious } from \"react-icons/bi\"; // icons for next and previous track\nimport { IconContext } from \"react-icons\"; // for customazing the icons\n\nconst MusicPlayer = () => {};\n_c = MusicPlayer;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"names":["useEffect","useState","useSound","qala","AiFillPlayCircle","AiFillPauseCircle","BiSkipNext","BiSkipPrevious","IconContext","MusicPlayer","_c","$RefreshReg$"],"sources":["C:/Users/Misho/Desktop/Semester 6/HeardIT/Music app test 2 - front end/musictest2/src/musicPlayer.jsx"],"sourcesContent":["// import React, { useState, useRef, useEffect, useCallback } from \"react\"\r\n// import ReactPlayer from \"react-player\"\r\n// import { FaPlay, FaPause } from \"react-icons/fa\"\r\n\r\n// const MusicPlayer = () => {\r\n// \tconst [playing, setPlaying] = useState(false)\r\n// \tconst [played, setPlayed] = useState(0)\r\n// \tconst [volume, setVolume] = useState(0.5)\r\n// \tconst [duration, setDuration] = useState(0)\r\n// \tconst [currentTime, setCurrentTime] = useState(0)\r\n// \tconst [seeking, setSeeking] = useState(false)\r\n\r\n// \tconst playerRef = useRef(null)\r\n\r\n// \tconsole.log(\"-----------vvv--------------\")\r\n// \tconsole.log(\"playing: \" + playing)\r\n\r\n// \tconst handlePlayPause = useCallback(() => {\r\n// \t\tsetPlaying((prevPlaying) => !prevPlaying)\r\n// \t}, [playing])\r\n\r\n// \tconst handleProgress = useCallback(\r\n// \t\t(progress) => {\r\n// \t\t\tif (!seeking) {\r\n// \t\t\t\tsetPlayed(progress.played)\r\n// \t\t\t\tsetCurrentTime(progress.played * duration)\r\n// \t\t\t}\r\n// \t\t},\r\n// \t\t[seeking, duration]\r\n// \t)\r\n\r\n// \tconst handleSeek = useCallback(\r\n// \t\t(e) => {\r\n// \t\t\tconst seekTime = parseFloat(e.target.value)\r\n// \t\t\tsetPlayed(seekTime)\r\n// \t\t\tsetCurrentTime(seekTime * duration)\r\n// \t\t\tplayerRef.current.seekTo(seekTime, \"fraction\")\r\n// \t\t},\r\n// \t\t[duration]\r\n// \t)\r\n\r\n// \tconst handleSeekMouseDown = useCallback(() => {\r\n// \t\tsetSeeking(true)\r\n// \t}, [])\r\n\r\n// \tconst handleSeekMouseUp = useCallback(() => {\r\n// \t\tsetSeeking(false)\r\n// \t}, [])\r\n\r\n// \tconst handleVolumeChange = useCallback((e) => {\r\n// \t\tconst newVolume = parseFloat(e.target.value)\r\n// \t\tsetVolume(newVolume)\r\n// \t}, [])\r\n\r\n// \tconst handleDuration = useCallback((duration) => {\r\n// \t\tsetDuration(duration)\r\n// \t}, [])\r\n\r\n// \tconst handleEnded = useCallback(() => {\r\n// \t\tsetPlaying(false)\r\n// \t}, [])\r\n\r\n// \tuseEffect(() => {\r\n// \t\tconsole.log(\"MusicPlayer component re-rendered\")\r\n// \t}, [])\r\n\r\n// \tconst apiUrl = \"http://localhost:8080/api/music/stream\"\r\n\r\n// \treturn (\r\n// \t\t<div>\r\n// \t\t\t<h2>Music Player</h2>\r\n// \t\t\t<ReactPlayer\r\n// \t\t\t\tref={playerRef}\r\n// \t\t\t\turl={apiUrl}\r\n// \t\t\t\tplaying={playing}\r\n// \t\t\t\tvolume={volume}\r\n// \t\t\t\tonPlay={handlePlayPause}\r\n// \t\t\t\tonPause={handlePlayPause}\r\n// \t\t\t\tonProgress={handleProgress}\r\n// \t\t\t\tonDuration={handleDuration}\r\n// \t\t\t\tonSeek={handleSeek}\r\n// \t\t\t\tonEnded={handleEnded}\r\n// \t\t\t/>\r\n// \t\t\t<div>\r\n// \t\t\t\t<button onClick={handlePlayPause}>\r\n// \t\t\t\t\t{playing ? <FaPause /> : <FaPlay />}\r\n// \t\t\t\t</button>\r\n// \t\t\t\t<input\r\n// \t\t\t\t\ttype=\"range\"\r\n// \t\t\t\t\tmin={0}\r\n// \t\t\t\t\tmax={1}\r\n// \t\t\t\t\tstep=\"any\"\r\n// \t\t\t\t\tvalue={played}\r\n// \t\t\t\t\tonChange={handleSeek}\r\n// \t\t\t\t\tonMouseDown={handleSeekMouseDown}\r\n// \t\t\t\t\tonMouseUp={handleSeekMouseUp}\r\n// \t\t\t\t/>\r\n// \t\t\t</div>\r\n// \t\t\t<div>\r\n// \t\t\t\t<input\r\n// \t\t\t\t\ttype=\"range\"\r\n// \t\t\t\t\tmin={0}\r\n// \t\t\t\t\tmax={1}\r\n// \t\t\t\t\tstep=\"any\"\r\n// \t\t\t\t\tvalue={volume}\r\n// \t\t\t\t\tonChange={handleVolumeChange}\r\n// \t\t\t\t/>\r\n// \t\t\t</div>\r\n// \t\t\t<div style={{ marginTop: \"10px\" }}>\r\n// \t\t\t\t<strong>Status: {playing ? \"Playing\" : \"Paused\"}</strong>\r\n// \t\t\t\t<p>Duration: {Math.floor(duration)}</p>\r\n// \t\t\t\t<p>Current Time: {Math.floor(currentTime)}</p>\r\n// \t\t\t</div>\r\n// \t\t</div>\r\n// \t)\r\n// }\r\n\r\n// const MemoizedMusicPlayer = React.memo(MusicPlayer)\r\n\r\n// export default MemoizedMusicPlayer\r\nimport { useEffect, useState } from \"react\"; \r\nimport useSound from \"use-sound\"; // for handling the sound\r\nimport qala from \"../assets/qala.mp3\"; // importing the music\r\nimport { AiFillPlayCircle, AiFillPauseCircle } from \"react-icons/ai\"; // icons for play and pause\r\nimport { BiSkipNext, BiSkipPrevious } from \"react-icons/bi\"; // icons for next and previous track\r\nimport { IconContext } from \"react-icons\"; // for customazing the icons\r\n\r\nconst MusicPlayer = () => { \r\n\t\r\n}"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,WAAW,CAAC,CAAC;AAClC,OAAOC,IAAI,MAAM,oBAAoB,CAAC,CAAC;AACvC,SAASC,gBAAgB,EAAEC,iBAAiB,QAAQ,gBAAgB,CAAC,CAAC;AACtE,SAASC,UAAU,EAAEC,cAAc,QAAQ,gBAAgB,CAAC,CAAC;AAC7D,SAASC,WAAW,QAAQ,aAAa,CAAC,CAAC;;AAE3C,MAAMC,WAAW,GAAGA,CAAA,KAAM,CAE1B,CAAC;AAAAC,EAAA,GAFKD,WAAW;AAAA,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}