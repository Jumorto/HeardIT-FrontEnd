{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Misho\\\\Desktop\\\\Semester 6\\\\HeardIT-FrontEnd\\\\src\\\\musicPlayer.jsx\",\n  _s = $RefreshSig$();\n// export default MemoizedMusicPlayer\nimport { useEffect, useState } from \"react\";\nimport useSound from \"use-sound\";\nimport { AiFillPlayCircle, AiFillPauseCircle } from \"react-icons/ai\";\nimport { BiSkipNext, BiSkipPrevious } from \"react-icons/bi\";\nimport { IconContext } from \"react-icons\";\nimport ProgressBar from \"./progressBar.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicPlayer = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  //const [seconds, setSeconds] = useState() // current position of the audio in seconds\n\n  const apiUrl = \"http://localhost:8080/api/music/stream/3\"; // Your backend API endpoint\n  // const apiUrl =\n  // \t\"https://heardit-backend-4lxjpjjbza-ez.a.run.app/api/music/stream\" // Your backend API endpoint\n\n  const [play, {\n    pause,\n    duration,\n    position\n  }] = useSound(apiUrl, {\n    format: \"mp3\" // Specify the audio format if needed\n  });\n  console.log(play);\n  const [progress, setProgress] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      // Update the progress bar position every 100 milliseconds\n      if (isPlaying && duration) {\n        // Calculate the percentage of completion for the progress bar\n        const calculatedProgress = position / duration * 100;\n        setProgress(calculatedProgress);\n      }\n    }, 100);\n\n    // Clear the interval on component unmount\n    return () => clearInterval(interval);\n  }, [isPlaying, position, duration]);\n  const playingButton = () => {\n    if (isPlaying) {\n      pause();\n      setIsPlaying(false);\n    } else {\n      play();\n      setIsPlaying(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"component\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Playing Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"musicCover\",\n      src: \"https://picsum.photos/200/200\",\n      alt: \"Album cover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title\",\n        children: \"Music\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subTitle\",\n        children: \"Song\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"playButton\",\n        children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n          value: {\n            size: \"3em\",\n            color: \"#27AE60\"\n          },\n          children: /*#__PURE__*/_jsxDEV(BiSkipPrevious, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), !isPlaying ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"playButton\",\n        onClick: playingButton,\n        children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n          value: {\n            size: \"3em\",\n            color: \"#27AE60\"\n          },\n          children: /*#__PURE__*/_jsxDEV(AiFillPlayCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"playButton\",\n        onClick: playingButton,\n        children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n          value: {\n            size: \"3em\",\n            color: \"#27AE60\"\n          },\n          children: /*#__PURE__*/_jsxDEV(AiFillPauseCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"playButton\",\n        children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n          value: {\n            size: \"3em\",\n            color: \"#27AE60\"\n          },\n          children: /*#__PURE__*/_jsxDEV(BiSkipNext, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n      progress: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n};\n_s(MusicPlayer, \"OL4NgWJP1WA6zjNZ71YnAsICmnQ=\", false, function () {\n  return [useSound];\n});\n_c = MusicPlayer;\nexport default MusicPlayer;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"names":["useEffect","useState","useSound","AiFillPlayCircle","AiFillPauseCircle","BiSkipNext","BiSkipPrevious","IconContext","ProgressBar","jsxDEV","_jsxDEV","MusicPlayer","_s","isPlaying","setIsPlaying","apiUrl","play","pause","duration","position","format","console","log","progress","setProgress","interval","setInterval","calculatedProgress","clearInterval","playingButton","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","Provider","value","size","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Misho/Desktop/Semester 6/HeardIT-FrontEnd/src/musicPlayer.jsx"],"sourcesContent":["// export default MemoizedMusicPlayer\r\nimport { useEffect, useState } from \"react\"\r\nimport useSound from \"use-sound\"\r\nimport { AiFillPlayCircle, AiFillPauseCircle } from \"react-icons/ai\"\r\nimport { BiSkipNext, BiSkipPrevious } from \"react-icons/bi\"\r\nimport { IconContext } from \"react-icons\"\r\nimport ProgressBar from \"./progressBar.jsx\"\r\n\r\nconst MusicPlayer = () => {\r\n\tconst [isPlaying, setIsPlaying] = useState(false)\r\n\t//const [seconds, setSeconds] = useState() // current position of the audio in seconds\r\n\r\n\tconst apiUrl = \"http://localhost:8080/api/music/stream/3\" // Your backend API endpoint\r\n\t// const apiUrl =\r\n\t// \t\"https://heardit-backend-4lxjpjjbza-ez.a.run.app/api/music/stream\" // Your backend API endpoint\r\n\r\n\tconst [play, { pause, duration, position }] = useSound(apiUrl, {\r\n\t\tformat: \"mp3\", // Specify the audio format if needed\r\n\t})\r\n\r\n\tconsole.log(play)\r\n\tconst [progress, setProgress] = useState(0)\r\n\r\n\tuseEffect(() => {\r\n\t\tconst interval = setInterval(() => {\r\n\t\t\t// Update the progress bar position every 100 milliseconds\r\n\t\t\tif (isPlaying && duration) {\r\n\t\t\t\t// Calculate the percentage of completion for the progress bar\r\n\t\t\t\tconst calculatedProgress = (position / duration) * 100\r\n\t\t\t\tsetProgress(calculatedProgress)\r\n\t\t\t}\r\n\t\t}, 100)\r\n\r\n\t\t// Clear the interval on component unmount\r\n\t\treturn () => clearInterval(interval)\r\n\t}, [isPlaying, position, duration])\r\n\r\n\tconst playingButton = () => {\r\n\t\tif (isPlaying) {\r\n\t\t\tpause()\r\n\t\t\tsetIsPlaying(false)\r\n\t\t} else {\r\n\t\t\tplay()\r\n\t\t\tsetIsPlaying(true)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"component\">\r\n\t\t\t<h2>Playing Now</h2>\r\n\t\t\t<img\r\n\t\t\t\tclassName=\"musicCover\"\r\n\t\t\t\tsrc=\"https://picsum.photos/200/200\"\r\n\t\t\t\talt=\"Album cover\"\r\n\t\t\t/>\r\n\t\t\t<div>\r\n\t\t\t\t<h3 className=\"title\">Music</h3>\r\n\t\t\t\t<p className=\"subTitle\">Song</p>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button className=\"playButton\">\r\n\t\t\t\t\t<IconContext.Provider\r\n\t\t\t\t\t\tvalue={{ size: \"3em\", color: \"#27AE60\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<BiSkipPrevious />\r\n\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t</button>\r\n\t\t\t\t{!isPlaying ? (\r\n\t\t\t\t\t<button className=\"playButton\" onClick={playingButton}>\r\n\t\t\t\t\t\t<IconContext.Provider\r\n\t\t\t\t\t\t\tvalue={{ size: \"3em\", color: \"#27AE60\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<AiFillPlayCircle />\r\n\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<button className=\"playButton\" onClick={playingButton}>\r\n\t\t\t\t\t\t<IconContext.Provider\r\n\t\t\t\t\t\t\tvalue={{ size: \"3em\", color: \"#27AE60\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<AiFillPauseCircle />\r\n\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t\t<button className=\"playButton\">\r\n\t\t\t\t\t<IconContext.Provider\r\n\t\t\t\t\t\tvalue={{ size: \"3em\", color: \"#27AE60\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<BiSkipNext />\r\n\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<ProgressBar progress={progress} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MusicPlayer\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}