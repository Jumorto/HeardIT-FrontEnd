{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Misho\\\\Desktop\\\\Semester 6\\\\HeardIT-FrontEnd\\\\src\\\\components\\\\musicPlayer.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport useSound from \"use-sound\";\nimport { AiFillPlayCircle, AiFillPauseCircle } from \"react-icons/ai\";\nimport { IconContext } from \"react-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicPlayer = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const apiUrl = \"http://localhost:8080/api/music/stream\"; // Your backend API endpoint /2\n  // const apiUrl =\n  // \t\"https://heardit-backend-4lxjpjjbza-ez.a.run.app/api/music/stream\" // Your backend API endpoint\n\n  const [play, {\n    pause,\n    duration,\n    position\n  }] = useSound(apiUrl, {\n    format: \"mp3\" // Specify the audio format if needed\n  });\n  console.log(play);\n  const [progress, setProgress] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      // Update the progress bar position every 100 milliseconds\n      if (isPlaying && duration) {\n        // Calculate the percentage of completion for the progress bar\n        const calculatedProgress = position / duration * 100;\n        setProgress(calculatedProgress);\n      }\n    }, 100);\n\n    // Clear the interval on component unmount\n    return () => clearInterval(interval);\n  }, [isPlaying, position, duration]);\n  const playingButton = () => {\n    if (isPlaying) {\n      pause();\n      setIsPlaying(false);\n    } else {\n      play();\n      setIsPlaying(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"music-player-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"music-player-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"musicCover\",\n        src: \"https://picsum.photos/200/200\",\n        alt: \"Album cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"title\",\n          children: \"Music\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"subTitle\",\n          children: \"Song\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: !isPlaying ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"playButton\",\n          onClick: playingButton,\n          children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n            value: {\n              size: \"3em\",\n              color: \"#27AE60\"\n            },\n            children: /*#__PURE__*/_jsxDEV(AiFillPlayCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"playButton\",\n          onClick: playingButton,\n          children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n            value: {\n              size: \"3em\",\n              color: \"#27AE60\"\n            },\n            children: /*#__PURE__*/_jsxDEV(AiFillPauseCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n};\n_s(MusicPlayer, \"OL4NgWJP1WA6zjNZ71YnAsICmnQ=\", false, function () {\n  return [useSound];\n});\n_c = MusicPlayer;\nexport default MusicPlayer;\n\n// import { BiSkipNext, BiSkipPrevious } from \"react-icons/bi\"\n{\n  /* <button className=\"playButton\">\r\n  \t\t\t\t<IconContext.Provider\r\n  \t\t\t\t\tvalue={{ size: \"3em\", color: \"#27AE60\" }}\r\n  \t\t\t\t>\r\n  \t\t\t\t\t<BiSkipPrevious />\r\n  \t\t\t\t</IconContext.Provider>\r\n  \t\t\t</button> */\n}\n{\n  /* <button className=\"playButton\">\r\n  \t\t\t\t<IconContext.Provider\r\n  \t\t\t\t\tvalue={{ size: \"3em\", color: \"#27AE60\" }}\r\n  \t\t\t\t>\r\n  \t\t\t\t\t<BiSkipNext />\r\n  \t\t\t\t</IconContext.Provider>\r\n  \t\t\t</button> */\n}\nvar _c;\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"names":["useEffect","useState","useSound","AiFillPlayCircle","AiFillPauseCircle","IconContext","jsxDEV","_jsxDEV","MusicPlayer","_s","isPlaying","setIsPlaying","apiUrl","play","pause","duration","position","format","console","log","progress","setProgress","interval","setInterval","calculatedProgress","clearInterval","playingButton","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Provider","value","size","color","_c","$RefreshReg$"],"sources":["C:/Users/Misho/Desktop/Semester 6/HeardIT-FrontEnd/src/components/musicPlayer.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport useSound from \"use-sound\"\r\nimport { AiFillPlayCircle, AiFillPauseCircle } from \"react-icons/ai\"\r\nimport { IconContext } from \"react-icons\"\r\n\r\nconst MusicPlayer = () => {\r\n\tconst [isPlaying, setIsPlaying] = useState(false)\r\n\r\n\tconst apiUrl = \"http://localhost:8080/api/music/stream\" // Your backend API endpoint /2\r\n\t// const apiUrl =\r\n\t// \t\"https://heardit-backend-4lxjpjjbza-ez.a.run.app/api/music/stream\" // Your backend API endpoint\r\n\r\n\tconst [play, { pause, duration, position }] = useSound(apiUrl, {\r\n\t\tformat: \"mp3\", // Specify the audio format if needed\r\n\t})\r\n\r\n\tconsole.log(play)\r\n\tconst [progress, setProgress] = useState(0)\r\n\r\n\tuseEffect(() => {\r\n\t\tconst interval = setInterval(() => {\r\n\t\t\t// Update the progress bar position every 100 milliseconds\r\n\t\t\tif (isPlaying && duration) {\r\n\t\t\t\t// Calculate the percentage of completion for the progress bar\r\n\t\t\t\tconst calculatedProgress = (position / duration) * 100\r\n\t\t\t\tsetProgress(calculatedProgress)\r\n\t\t\t}\r\n\t\t}, 100)\r\n\r\n\t\t// Clear the interval on component unmount\r\n\t\treturn () => clearInterval(interval)\r\n\t}, [isPlaying, position, duration])\r\n\r\n\tconst playingButton = () => {\r\n\t\tif (isPlaying) {\r\n\t\t\tpause()\r\n\t\t\tsetIsPlaying(false)\r\n\t\t} else {\r\n\t\t\tplay()\r\n\t\t\tsetIsPlaying(true)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"music-player-container\">\r\n\t\t\t<div className=\"music-player-content\">\r\n\t\t\t\t<img\r\n\t\t\t\t\tclassName=\"musicCover\"\r\n\t\t\t\t\tsrc=\"https://picsum.photos/200/200\"\r\n\t\t\t\t\talt=\"Album cover\"\r\n\t\t\t\t/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3 className=\"title\">Music</h3>\r\n\t\t\t\t\t<p className=\"subTitle\">Song</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{!isPlaying ? (\r\n\t\t\t\t\t\t<button className=\"playButton\" onClick={playingButton}>\r\n\t\t\t\t\t\t\t<IconContext.Provider\r\n\t\t\t\t\t\t\t\tvalue={{ size: \"3em\", color: \"#27AE60\" }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<AiFillPlayCircle />\r\n\t\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<button className=\"playButton\" onClick={playingButton}>\r\n\t\t\t\t\t\t\t<IconContext.Provider\r\n\t\t\t\t\t\t\t\tvalue={{ size: \"3em\", color: \"#27AE60\" }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<AiFillPauseCircle />\r\n\t\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MusicPlayer\r\n\r\n// import { BiSkipNext, BiSkipPrevious } from \"react-icons/bi\"\r\n{\r\n\t/* <button className=\"playButton\">\r\n\t\t\t\t\t<IconContext.Provider\r\n\t\t\t\t\t\tvalue={{ size: \"3em\", color: \"#27AE60\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<BiSkipPrevious />\r\n\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t</button> */\r\n}\r\n\r\n{\r\n\t/* <button className=\"playButton\">\r\n\t\t\t\t\t<IconContext.Provider\r\n\t\t\t\t\t\tvalue={{ size: \"3em\", color: \"#27AE60\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<BiSkipNext />\r\n\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t</button> */\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}